// Tests for the TextCanvas

function testCreation() {
    var canvas = TextCanvas();
    assertEquals(canvas.size(), [0,0]);
    assertEquals(canvas.height(), 0);
    assertEquals(canvas.width(), 0);
    assertEquals(canvas.toString(), "TextCanvas[0x0]");
    assertEquals(canvas.asText(), "");
}

function testExtends() {
    var canvas = TextCanvas();
    canvas.put(2, 2, "X");

    assertEquals(canvas.get(0, 0), " ");
    assertEquals(canvas.get(2, 2), "X");
    assertEquals(canvas.size(), [3,3]);
    assertEquals(canvas.height(), 3);
    assertEquals(canvas.width(), 3);
    assertEquals(canvas.toString(), "TextCanvas[3x3]");
}

function testFill() {
    var canvas = TextCanvas();
    canvas.fill(".", 0, 0, 5, 4);
    canvas.fill("X", 1, 1, 3, 2);
    assertEquals(canvas.asText(), """
        .....
        .XXX.
        .XXX.
        .....
        """);
}

function testPutGet() {
    var canvas = TextCanvas();
    canvas.put(1, 1, "abc");
    assertEquals(canvas.size(), [4, 2]);
    assertEquals(canvas.get(0,0), " ");
    assertEquals(canvas.get(0,1), " ");
    assertEquals(canvas.get(1,1), "a");
    assertEquals(canvas.get(2,1), "b");
    assertEquals(canvas.get(3,1), "c");

    assertError(\-> canvas.get(-1, 0),
        "Expected non-negative number, got: Number '-1'.");
    assertError(\-> canvas.get(0, -2),
        "Expected non-negative number, got: Number '-2'.");
    assertError(\-> canvas.put(-1, 0, "x"),
        "Expected non-negative number, got: Number '-1'.");
    assertError(\-> canvas.put(0, -2, "x"),
        "Expected non-negative number, got: Number '-2'.");
}

// Verify that getting a character outside the "put" data doesn't
// actually extend the canvas.
function testGet_noExtend() {
    var canvas = TextCanvas();
    assertEquals(canvas.get(10, 10), " ");
    assertEquals(canvas.size(), [0, 0]);
}

// Verify that the last character is at the given cell.
function testPutLeft_normal() {
    var canvas = TextCanvas();
    canvas.putLeft(4, 0, "abc");
    assertEquals(canvas.get(4, 0), "c");
    assertEquals(canvas.asText(), "  abc");
}

// Verify that the last character is at the given cell.
function testPutLeft_clipped() {
    var canvas = TextCanvas();
    canvas.putLeft(1, 0, "abc");
    assertEquals(canvas.get(1, 0), "c");
    assertEquals(canvas.asText(), "bc");
}

function testPutDown() {
    var canvas = TextCanvas();
    canvas.fill(".", 0, 0, 3, 3);
    canvas.putDown(1, 1, "XY");

    assertEquals(canvas.asText(), """
        ...
        .X.
        .Y.
        """);
}

// Verify that the last character is at the given cell.
function testPutUp_normal() {
    var canvas = TextCanvas();
    canvas.fill(".", 0, 0, 1, 5);
    canvas.putUp(0, 4, "abc");
    assertEquals(canvas.get(0, 4), "c");
    assertEquals(canvas.asText(), """
        .
        .
        a
        b
        c
        """);
}

// Verify that the last character is at the given cell.
function testPutUp() {
    var canvas = TextCanvas();
    canvas.putUp(0, 1, "abc");
    assertEquals(canvas.get(0, 1), "c");
    assertEquals(canvas.asText(), "b\nc");
}


